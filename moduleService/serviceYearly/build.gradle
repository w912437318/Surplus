apply plugin: 'com.android.library'

def globalConfig = rootProject.ext

android {
    compileSdkVersion globalConfig.android['compileSdkVersion']

    defaultConfig {
        minSdkVersion globalConfig.android['minSdkVersion']
        targetSdkVersion globalConfig.android['targetSdkVersion']
        versionCode globalConfig.android['versionCode']
        versionName globalConfig.android['versionName']

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName()]
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility = globalConfig.android['sourceCompatibility']
        targetCompatibility = globalConfig.android['targetCompatibility']
    }

}

dependencies {
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'

    implementation globalConfig.dependencies['AndroidSupportV7']
    compileOnly globalConfig.dependencies['AndroidSupportV4']
    compileOnly globalConfig.dependencies['AndroidSupportDesign']
    compileOnly globalConfig.dependencies['AndroidSupportAnnotation']
    compileOnly globalConfig.dependencies['RetrofitGsonConverter']
    compileOnly globalConfig.dependencies['RxJava']
    compileOnly globalConfig.dependencies['RxAndroid']
    compileOnly globalConfig.dependencies['RetrofitRxJavaAdapter']
    compileOnly globalConfig.dependencies['MPAndroidChart']
    compileOnly globalConfig.dependencies['ARouterAPI']
    annotationProcessor globalConfig.dependencies['ARouterCompiler']

    implementation project(':moduleCommon')
    implementation project(':moduleResource')
}
